name: Tests and linters

on:
  workflow_call:
    secrets: {}

jobs:
  version-check:
    name: Check Cargo.toml version
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Download source code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Check cargo file version
        run: |
          CARGO_VERSION=$(sed  -n 's,^version = \"\(.*\)\",\1,p' Cargo.toml)
          TAG_VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')
          if [ "$CARGO_VERSION" != "$TAG_VERSION" ];then
              echo "::error title=Invalid Cargo.toml version::Cargo.toml version does not match the tag version"
              exit 1
          fi
  check:
    name: Cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup rust toolchain
        run: |
          rustup toolchain install stable  --profile minimal --target wasm32-wasip2
          rustup override set stable
        shell: bash
      - name: Run Cargo check
        run: cargo check --workspace
        shell: bash

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup rust toolchain
        run: |
          rustup toolchain install stable  --profile minimal --target wasm32-wasip2
          rustup override set stable
        shell: bash
      - name: Run Cargo test
        run: cargo test --workspace
        shell: bash
  e2e-tests:
    name: E2E testSuite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@v4.5.8
      - name: Build and annotate policy
        with:
          generate-sbom: false
        uses: kubewarden/github-actions/policy-build-rust@v4.5.8
      - name: Run e2e tests
        run: |
          make e2e-tests
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup rust toolchain
        run: |
          rustup toolchain install stable  --profile minimal --target wasm32-wasip2 --component rustfmt
          rustup override set stable
        shell: bash
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
        shell: bash

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup rust toolchain
        run: |
          rustup toolchain install stable  --profile minimal --target wasm32-wasip2 --component clippy
          rustup override set stable
      - name: Run Cargo clippy
        run: cargo clippy --workspace -- -D warnings
